= simple_form_for [@order, @order_article], remote: true do |form|
  .modal-header
    = close_button :modal
    %h3= t '.title'
  .modal-body
    - if params[:without_units]
      = hidden_field_tag :without_units, true
    - else
      .form-group
        .row
          = form.label :units_to_order, class: 'col-sm-3 control-label'
          .col-sm-3
            = form.input_field :units_to_order, class: 'form-control'
          = form.label :units_received, class: 'col-sm-2 control-label',
             label: t('activerecord.attributes.order_article.units_received_short'),
             style: 'padding-right: 0; padding-left: 0', required: false
          .col-sm-3
            = form.input_field :units_received, class: 'form-control'
        .row
          %p.col-sm-offset-3.col-sm-8.help-block
            = t 'simple_form.hints.order_article.units_to_order'

    = simple_fields_for :article, @order_article.article do |f|
      = f.input :name

      - if @order_article.article.is_a?(StockArticle)
        .col-sm-offset-3.alert.alert-warning= t '.stock_alert'
      - else
        = simple_fields_for :article_price, @order_article.article_price do |fprice|
          = render partial: 'shared/article_fields_units', locals: {f_unit: f, f_uq: fprice}
          = render partial: 'shared/article_fields_price', locals: {f: fprice}

      = form.input :update_global_price, as: :boolean
      = f.input :order_number
  .modal-footer
    = link_to t('ui.close'), '#', class: 'btn btn-default', data: {dismiss: 'modal'}
    = form.submit class: 'btn btn-primary'
